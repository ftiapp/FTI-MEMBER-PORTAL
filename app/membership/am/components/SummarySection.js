// components/SummarySection.js
"use client";

import PropTypes from "prop-types";
import { useMemo } from "react";

// Simplified info card with consistent blue theme (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô AC)
const InfoCard = ({ title, value }) => (
  <div className="bg-white border border-gray-200 rounded-lg p-4">
    <h4 className="text-sm font-medium text-gray-700 mb-1">{title}</h4>
    <p className="text-sm text-gray-900">{value || "-"}</p>
  </div>
);

// Special card for business types with tags (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô AC ‡πÅ‡∏ï‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à)
const BusinessTypesCard = ({ title, businessTypes }) => (
  <div className="bg-white border border-gray-200 rounded-lg p-4">
    <h4 className="text-sm font-medium text-gray-700 mb-3">{title}</h4>
    {businessTypes.length > 0 ? (
      <div className="flex flex-wrap gap-2">
        {businessTypes.map((type, index) => (
          <span
            key={index}
            className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 border border-blue-200"
          >
            {type}
          </span>
        ))}
      </div>
    ) : (
      <p className="text-sm text-gray-500">‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
    )}
  </div>
);

// List card for industrial groups and provincial councils
const ListCard = ({ title, items }) => {
  const itemsArray = Array.isArray(items) ? items : items ? [items] : [];

  return (
    <div className="bg-white border border-gray-200 rounded-lg p-4">
      <h4 className="text-sm font-medium text-gray-700 mb-3">{title}</h4>
      {itemsArray.length > 0 ? (
        <div className="flex flex-wrap gap-2">
          {itemsArray.map((item, index) => (
            <span
              key={index}
              className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 border border-blue-200"
            >
              {item}
            </span>
          ))}
        </div>
      ) : (
        <p className="text-sm text-gray-500">‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
      )}
    </div>
  );
};

// Representative card - ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö field names ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
const RepresentativeCard = ({ representative, index }) => (
  <div className="bg-white border border-gray-200 rounded-lg p-4">
    <div className="mb-2">
      <h4 className="text-sm font-medium text-gray-700">‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô‡∏™‡∏°‡∏≤‡∏Ñ‡∏°‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà {index + 1}</h4>
      {representative?.isPrimary && (
        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 mt-1">
          ‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô‡∏´‡∏•‡∏±‡∏Å
        </span>
      )}
    </div>

    {representative ? (
      <div className="space-y-2">
        <div>
          <p className="text-xs text-gray-500">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡πÑ‡∏ó‡∏¢)</p>
          <p className="text-sm">
            {representative.first_name_th || representative.firstNameTh || ""}{" "}
            {representative.last_name_th || representative.lastNameTh || ""}
          </p>
        </div>
        <div>
          <p className="text-xs text-gray-500">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)</p>
          <p className="text-sm">
            {representative.first_name_en || representative.firstNameEn || ""}{" "}
            {representative.last_name_en || representative.lastNameEn || ""}
          </p>
        </div>
        {representative.position && (
          <div>
            <p className="text-xs text-gray-500">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</p>
            <p className="text-sm">{representative.position}</p>
          </div>
        )}
        <div>
          <p className="text-xs text-gray-500">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</p>
          <p className="text-sm">{representative.email || "-"}</p>
        </div>
        <div>
          <p className="text-xs text-gray-500">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</p>
          <p className="text-sm">
            {(() => {
              const phone = representative.phone || "-";
              const extension =
                representative.phone_extension || representative.phoneExtension || "";
              if (phone === "-") return "-";
              return extension ? `${phone} ‡∏ï‡πà‡∏≠ ${extension}` : phone;
            })()}
          </p>
        </div>
      </div>
    ) : (
      <p className="text-sm text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>
    )}
  </div>
);

// Simplified file display (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô AC)
const FileCard = ({ fileName, description, fileUrl }) => (
  <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
    <div className="flex items-center gap-3">
      <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
        <svg
          className="w-4 h-4 text-blue-600"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2}
            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
          />
        </svg>
      </div>
      <div className="flex-1">
        <p className="text-sm font-medium text-gray-900">{description}</p>
        <p className="text-xs text-gray-500">
          {fileName !== "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î" ? fileName : "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î"}
        </p>
      </div>
      {fileName !== "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î" && fileUrl && (
        <div className="flex items-center gap-2">
          <div className="w-4 h-4 text-green-500">
            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M5 13l4 4L19 7"
              />
            </svg>
          </div>
          <button
            className="w-6 h-6 text-blue-600 hover:text-blue-800 transition-colors"
            title="‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö"
            onClick={() => window.open(fileUrl, "_blank")}
          >
            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
              />
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
              />
            </svg>
          </button>
        </div>
      )}
    </div>
  </div>
);

// Simplified section with consistent blue theme (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô AC)
const Section = ({ title, children, className }) => (
  <div className={`bg-white rounded-lg shadow-sm border border-gray-200 ${className || ""}`}>
    <div className="bg-blue-600 px-6 py-4 rounded-t-lg">
      <h3 className="text-lg font-semibold text-white">{title}</h3>
    </div>
    <div className="p-6">{children}</div>
  </div>
);

export default function SummarySection({ formData, industrialGroups, provincialChapters }) {
  // üî• Debug logging
  console.log("üîç SummarySection Debug:", {
    formDataKeys: Object.keys(formData || {}),
    industrialGroupsCount: industrialGroups?.length || 0,
    provincialChaptersCount: provincialChapters?.length || 0,
    selectedIndustrialGroups: formData?.industrialGroups,
    selectedProvincialCouncils: formData?.provincialCouncils,
    selectedProvincialChapters: formData?.provincialChapters,
    industrialGroupsData: industrialGroups,
    provincialChaptersData: provincialChapters,
  });

  // Helper functions
  const getFileName = (file) => {
    if (file && typeof file === "object" && file.name) {
      return file.name;
    }
    if (file && typeof file === "object" && file.file_name) {
      return file.file_name;
    }
    return "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î";
  };

  const getFileUrl = (file) => {
    if (file && typeof file === "object") {
      return file.fileUrl || file.cloudinary_url || file.file_path || null;
    }
    return null;
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö array (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô AC)
  const getSelectedBusinessTypesArray = () => {
    if (!formData.businessTypes || Object.keys(formData.businessTypes).length === 0) {
      return [];
    }

    const businessTypeNames = {
      manufacturer: "‡∏ú‡∏π‡πâ‡∏ú‡∏•‡∏¥‡∏ï",
      distributor: "‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢",
      importer: "‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤",
      exporter: "‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å",
      service: "‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
      other: "‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
    };

    const types = Object.keys(formData.businessTypes).map((type) => {
      if (type === "other" && formData.otherBusinessTypeDetail) {
        return `‡∏≠‡∏∑‡πà‡∏ô‡πÜ (${formData.otherBusinessTypeDetail})`;
      }
      return businessTypeNames[type] || type;
    });

    return types;
  };

  // ‚úÖ FIXED: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const getSelectedIndustrialGroupsArray = () => {
    // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á key names
    const groupIds =
      formData.industrialGroups || formData.industrialGroupIds || formData.industryGroups || [];

    console.log("üîç Industrial Groups - Group IDs:", groupIds);
    console.log("üîç Industrial Groups - Available lookup:", industrialGroups);

    if (!groupIds || groupIds.length === 0) {
      return [];
    }

    return groupIds.map((groupId) => {
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏≤‡∏Å industrialGroups prop
      const group = industrialGroups?.find((g) => String(g.id) === String(groupId));
      const name = group ? group.name_th : `‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏° ${groupId}`;
      console.log(`üîç Industrial Group mapping: ${groupId} -> ${name}`);
      return name;
    });
  };

  // ‚úÖ FIXED: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏†‡∏≤‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const getSelectedProvincialChaptersArray = () => {
    // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á key names
    const chapterIds =
      formData.provincialCouncils ||
      formData.provincialChapterIds ||
      formData.provincialChapters ||
      formData.provinceChapters ||
      [];

    console.log("üîç Provincial Chapters - Chapter IDs:", chapterIds);
    console.log("üîç Provincial Chapters - Available lookup:", provincialChapters);

    if (!chapterIds || chapterIds.length === 0) {
      return [];
    }

    return chapterIds.map((chapterId) => {
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏†‡∏≤‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏à‡∏≤‡∏Å provincialChapters prop
      const chapter = provincialChapters?.find((c) => String(c.id) === String(chapterId));
      const name = chapter ? chapter.name_th : `‡∏™‡∏†‡∏≤‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ${chapterId}`;
      console.log(`üîç Provincial Chapter mapping: ${chapterId} -> ${name}`);
      return name;
    });
  };

  // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
  const formatNumber = (number) => {
    return number ? `${number.toLocaleString()}` : "-";
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
  const getContactPersonFullName = (isEnglish = false) => {
    if (!formData) return "-";

    // ‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà: ‡πÉ‡∏ä‡πâ contactPersons array
    if (formData.contactPersons && formData.contactPersons.length > 0) {
      const mainContact = formData.contactPersons[0]; // ‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ô‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å
      const getPrename = (c, en = false) => {
        if (!c) return "";
        if (en) {
          const pre = c.prenameEn || c.prename_en || "";
          if (pre && pre.toLowerCase() === "other") return c.prenameOther || c.prename_other || "";
          return pre;
        } else {
          const pre = c.prenameTh || c.prename_th || "";
          if (pre && (pre === "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" || pre === "‡∏≠‡∏∑‡πà‡∏ô ‡πÜ"))
            return c.prenameOther || c.prename_other || "";
          return pre;
        }
      };

      if (isEnglish) {
        const prename = getPrename(mainContact, true);
        const first = mainContact.first_name_en || mainContact.firstNameEn || "";
        const last = mainContact.last_name_en || mainContact.lastNameEn || "";
        const parts = [prename, first, last].filter(Boolean);
        const name = parts.join(" ").trim();
        return name || "-";
      }
      const prename = getPrename(mainContact, false);
      const first = mainContact.first_name_th || mainContact.firstNameTh || "";
      const last = mainContact.last_name_th || mainContact.lastNameTh || "";
      const parts = [prename, first, last].filter(Boolean);
      const name = parts.join(" ").trim();
      return name || "-";
    }

    // ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤: ‡πÉ‡∏ä‡πâ contactPerson object ‡∏´‡∏£‡∏∑‡∏≠ direct fields
    if (isEnglish) {
      const prename =
        formData.contactPersonPrenameEn === "Other"
          ? formData.contactPersonPrenameOther || ""
          : formData.contactPersonPrenameEn || "";
      const firstNameEng = formData.contactPersonFirstNameEng || formData.contactPersonFirstName;
      const lastNameEng = formData.contactPersonLastNameEng || formData.contactPersonLastName;
      const parts = [prename, firstNameEng || "", lastNameEng || ""].filter(Boolean);
      const name = parts.join(" ").trim();
      return name || "-";
    }

    // ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    const prename =
      formData.contactPersonPrenameTh === "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" || formData.contactPersonPrenameTh === "‡∏≠‡∏∑‡πà‡∏ô ‡πÜ"
        ? formData.contactPersonPrenameOther || ""
        : formData.contactPersonPrenameTh || "";
    const firstNameTh = formData.contactPersonFirstName;
    const lastNameTh = formData.contactPersonLastName;
    const parts = [prename, firstNameTh || "", lastNameTh || ""].filter(Boolean);
    const name = parts.join(" ").trim();
    return name || "-";
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const getContactPersonDetails = () => {
    if (!formData) return {};

    // ‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà: ‡πÉ‡∏ä‡πâ contactPersons array
    if (formData.contactPersons && formData.contactPersons.length > 0) {
      const mainContact = formData.contactPersons[0];
      return {
        position: mainContact.position || "-",
        email: mainContact.email || "-",
        phone: mainContact.phone || "-",
        phoneExtension: mainContact.phone_extension || mainContact.phoneExtension || "",
        typeContactName:
          mainContact.type_contact_name || mainContact.typeContactName || "‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ô‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å",
        typeContactOtherDetail:
          mainContact.type_contact_other_detail || mainContact.typeContactOtherDetail || "",
      };
    }

    // ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤: ‡πÉ‡∏ä‡πâ direct fields
    return {
      position: formData.contactPersonPosition || "-",
      email: formData.contactPersonEmail || "-",
      phone: formData.contactPersonPhone || "-",
      phoneExtension: formData.contactPersonPhoneExtension || "",
      typeContactName: "‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ô‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å", // default ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤
      typeContactOtherDetail: "",
    };
  };

  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
  const representatives = formData.representatives || [];

  return (
    <div className="space-y-6">
      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏Ñ‡∏° */}
      <Section title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏Ñ‡∏°">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <InfoCard
            title="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏Ñ‡∏° (‡πÑ‡∏ó‡∏¢)"
            value={formData.associationName || formData.company_name_th}
          />
          <InfoCard
            title="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏Ñ‡∏° (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)"
            value={
              formData.associationNameEn || formData.associationNameEng || formData.company_name_en
            }
          />

          <InfoCard title="‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ" value={formData.taxId || formData.tax_id} />
        </div>
      </Section>

      {/* ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏°‡∏≤‡∏Ñ‡∏° - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö multi-address */}
      <Section title="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏°‡∏≤‡∏Ñ‡∏°" className="mt-6">
        {(() => {
          // Address types configuration
          const addressTypes = {
            1: "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô",
            2: "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£",
            3: "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ",
          };

          // Check if using new multi-address format
          if (formData.addresses && typeof formData.addresses === "object") {
            return (
              <div className="space-y-6">
                {Object.entries(addressTypes).map(([type, label]) => {
                  const address = formData.addresses[type];
                  if (!address) return null;

                  return (
                    <div key={type} className="border border-gray-200 rounded-lg p-4">
                      <h4 className="text-lg font-medium text-gray-900 mb-4">{label}</h4>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <InfoCard
                          title="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà"
                          value={address.address_number || address.addressNumber}
                        />
                        <InfoCard title="‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£/‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô" value={address.building} />
                        <InfoCard title="‡∏´‡∏°‡∏π‡πà" value={address.moo} />
                        <InfoCard title="‡∏ã‡∏≠‡∏¢" value={address.soi} />
                        <InfoCard title="‡∏ñ‡∏ô‡∏ô" value={address.road || address.street} />
                        <InfoCard
                          title="‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á"
                          value={address.sub_district || address.subDistrict}
                        />
                        <InfoCard title="‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï" value={address.district} />
                        <InfoCard title="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" value={address.province} />
                        <InfoCard
                          title="‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå"
                          value={address.postal_code || address.postalCode}
                        />
                        <div className="md:col-span-2 grid grid-cols-1 md:grid-cols-2 gap-4">
                          <InfoCard title="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" value={address.email} />
                          <InfoCard title="‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå" value={address.website || formData.website} />
                        </div>
                        <InfoCard
                          title="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
                          value={(function () {
                            const p = address.phone || "-";
                            const ext = address.phone_extension || address.phoneExtension || "";
                            if (p === "-") return "-";
                            return ext ? `${p} ‡∏ï‡πà‡∏≠ ${ext}` : p;
                          })()}
                        />
                      </div>
                    </div>
                  );
                })}
              </div>
            );
          }

          // Fallback to old single address format - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö database field names
          return (
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <InfoCard title="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà" value={formData.addressNumber || formData.address_number} />
              <InfoCard title="‡∏´‡∏°‡∏π‡πà" value={formData.moo} />
              <InfoCard title="‡∏ã‡∏≠‡∏¢" value={formData.soi} />
              <InfoCard title="‡∏ñ‡∏ô‡∏ô" value={formData.road || formData.street} />
              <InfoCard title="‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á" value={formData.subDistrict || formData.sub_district} />
              <InfoCard title="‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï" value={formData.district} />
              <InfoCard title="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" value={formData.province} />
              <InfoCard title="‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå" value={formData.postalCode || formData.postal_code} />
              <InfoCard title="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" value={formData.associationEmail || formData.company_email} />
              <InfoCard
                title="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
                value={(function () {
                  const p = formData.associationPhone || formData.company_phone || "-";
                  const ext =
                    formData.associationPhoneExtension || formData.company_phone_extension || "";
                  if (p === "-") return "-";
                  return ext ? `${p} ‡∏ï‡πà‡∏≠ ${ext}` : p;
                })()}
              />
            </div>
          );
        })()}
      </Section>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ */}
      <Section title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠" className="mt-6">
        {(() => {
          const contactDetails = getContactPersonDetails();
          return (
            <div className="space-y-4">
              {/* ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ */}
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <div className="flex items-center space-x-2 mb-2">
                  <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800 border border-green-200">
                    {contactDetails.typeContactName}
                  </span>
                  {contactDetails.typeContactOtherDetail && (
                    <span className="text-sm text-gray-600 italic">
                      ({contactDetails.typeContactOtherDetail})
                    </span>
                  )}
                </div>
              </div>

              {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <InfoCard title="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡πÑ‡∏ó‡∏¢)" value={getContactPersonFullName(false)} />
                <InfoCard title="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)" value={getContactPersonFullName(true)} />
                <InfoCard title="‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á" value={contactDetails.position} />
                <InfoCard title="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" value={contactDetails.email} />
                <InfoCard
                  title="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
                  value={(function () {
                    const p = contactDetails.phone;
                    const ext = contactDetails.phoneExtension || "";
                    if (p === "-") return "-";
                    return ext ? `${p} ‡∏ï‡πà‡∏≠ ${ext}` : p;
                  })()}
                />
              </div>

              {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
              {formData?.contactPersons && formData.contactPersons.length > 1 && (
                <div className="mt-4">
                  <h4 className="text-sm font-medium text-gray-700 mb-3">‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h4>
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {formData.contactPersons.slice(1).map((contact, index) => (
                      <div
                        key={index + 1}
                        className="bg-white border border-gray-200 rounded-lg p-4"
                      >
                        <div className="flex items-center space-x-2 mb-2">
                          <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                            {contact.type_contact_name || contact.typeContactName || "‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠"}
                          </span>
                        </div>
                        <div className="space-y-1 text-sm">
                          <div>
                            <span className="font-medium">‡∏ä‡∏∑‡πà‡∏≠:</span>{" "}
                            {(() => {
                              const getPrenameTh = (c) => {
                                const pre = c.prenameTh || c.prename_th || "";
                                if (pre && (pre === "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" || pre === "‡∏≠‡∏∑‡πà‡∏ô ‡πÜ"))
                                  return c.prenameOther || c.prename_other || "";
                                return pre;
                              };
                              const parts = [
                                getPrenameTh(contact),
                                contact.first_name_th || contact.firstNameTh || "",
                                contact.last_name_th || contact.lastNameTh || "",
                              ].filter(Boolean);
                              const nameTh = parts.join(" ").trim();
                              return nameTh || "-";
                            })()}
                          </div>
                          <div>
                            <span className="font-medium">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</span> {contact.position || "-"}
                          </div>
                          <div>
                            <span className="font-medium">‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</span> {contact.email || "-"}
                          </div>
                          <div>
                            <span className="font-medium">‡πÇ‡∏ó‡∏£:</span>{" "}
                            {(function () {
                              const p = contact.phone || "-";
                              const ext = contact.phone_extension || contact.phoneExtension || "";
                              if (p === "-") return "-";
                              return ext ? `${p} ‡∏ï‡πà‡∏≠ ${ext}` : p;
                            })()}{" "}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          );
        })()}
      </Section>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô‡∏™‡∏°‡∏≤‡∏Ñ‡∏° */}
      <Section title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô‡∏™‡∏°‡∏≤‡∏Ñ‡∏°" className="mt-6">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {representatives.length > 0 ? (
            representatives.map((rep, index) => (
              <RepresentativeCard key={rep.id || index} representative={rep} index={index} />
            ))
          ) : (
            <p className="text-sm text-gray-500 col-span-3">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô</p>
          )}
        </div>
      </Section>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à */}
      <Section title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à" className="mt-6">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <BusinessTypesCard title="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à" businessTypes={getSelectedBusinessTypesArray()} />
          <InfoCard
            title="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ / ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£"
            value={
              formData.products?.length > 0
                ? formData.products
                    .map((p) => p.name_th || p.nameTh || p.name_en || p.nameEn)
                    .filter(Boolean)
                    .join(", ")
                : "-"
            }
          />

          <InfoCard
            title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"
            value={
              formData.numberOfEmployees || formData.number_of_employees
                ? formatNumber(formData.numberOfEmployees || formData.number_of_employees)
                : "-"
            }
          />
          <InfoCard
            title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏°‡∏≤‡∏Ñ‡∏°"
            value={
              formData.memberCount || formData.number_of_member
                ? formatNumber(formData.memberCount || formData.number_of_member)
                : "-"
            }
          />
        </div>

        {/* ‡πÅ‡∏¢‡∏Å Industrial Groups ‡πÅ‡∏•‡∏∞ Provincial Chapters ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ñ‡∏ß‡πÅ‡∏¢‡∏Å */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 mt-4">
          <ListCard title="‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°" items={getSelectedIndustrialGroupsArray()} />
          <ListCard title="‡∏™‡∏†‡∏≤‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" items={getSelectedProvincialChaptersArray()} />
        </div>
      </Section>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô */}
      <Section title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô" className="mt-6">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <InfoCard
            title="‡∏ó‡∏∏‡∏ô‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô (‡∏ö‡∏≤‡∏ó)"
            value={
              formData?.registeredCapital || formData?.registered_capital
                ? formatNumber(formData.registeredCapital || formData.registered_capital)
                : "-"
            }
          />
          <InfoCard
            title="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï (‡∏ï‡πà‡∏≠‡∏õ‡∏µ)"
            value={
              formData?.productionCapacityValue ||
              (formData?.production_capacity_value &&
                (formData?.productionCapacityUnit || formData?.production_capacity_unit))
                ? `${formatNumber(formData.productionCapacityValue || formData.production_capacity_value)} ${formData.productionCapacityUnit || formData.production_capacity_unit}`
                : "-"
            }
          />
          <InfoCard
            title="‡∏¢‡∏≠‡∏î‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (‡∏ö‡∏≤‡∏ó/‡∏õ‡∏µ)"
            value={
              formData?.salesDomestic || formData?.sales_domestic
                ? formatNumber(formData.salesDomestic || formData.sales_domestic)
                : "-"
            }
          />
          <InfoCard
            title="‡∏¢‡∏≠‡∏î‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å (‡∏ö‡∏≤‡∏ó/‡∏õ‡∏µ)"
            value={
              formData?.salesExport || formData?.sales_export
                ? formatNumber(formData.salesExport || formData.sales_export)
                : "-"
            }
          />
          <InfoCard
            title="‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ñ‡∏∑‡∏≠‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢ (%)"
            value={
              formData?.shareholderThaiPercent || formData?.shareholder_thai_percent
                ? `${Number(formData.shareholderThaiPercent || formData.shareholder_thai_percent).toFixed(2)}%`
                : "-"
            }
          />
          <InfoCard
            title="‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ñ‡∏∑‡∏≠‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (%)"
            value={
              formData?.shareholderForeignPercent || formData?.shareholder_foreign_percent
                ? `${Number(formData.shareholderForeignPercent || formData.shareholder_foreign_percent).toFixed(2)}%`
                : "-"
            }
          />
        </div>
      </Section>

      {/* ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö */}
      <Section title="‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö" className="mt-6">
        <div className="space-y-3">
          <FileCard
            fileName={getFileName(formData.associationCertificate)}
            fileUrl={getFileUrl(formData.associationCertificate)}
            description="‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏Ñ‡∏°"
          />
          <FileCard
            fileName={getFileName(formData.memberList)}
            fileUrl={getFileUrl(formData.memberList)}
            description="‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"
          />
        </div>
      </Section>

      {/* ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô */}
      <Section title="‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô" className="mt-6">
        <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-4">
          <div className="flex items-center">
            <div className="flex-shrink-0">
              <svg className="w-5 h-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fillRule="evenodd"
                  d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
                  clipRule="evenodd"
                />
              </svg>
            </div>
            <div className="ml-3">
              <h3 className="text-sm font-medium text-red-800">‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î</h3>
              <div className="mt-2 text-sm text-red-700">
                <p>
                  ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
                </p>
              </div>
            </div>
          </div>
        </div>
        <div className="space-y-3">
          <FileCard
            fileName={getFileName(formData.companyStamp)}
            fileUrl={getFileUrl(formData.companyStamp)}
            description="‡∏£‡∏π‡∏õ‡∏ï‡∏£‡∏≤‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏Ñ‡∏° (‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏£‡∏≤‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö)"
          />
          <FileCard
            fileName={getFileName(formData.authorizedSignature)}
            fileUrl={getFileUrl(formData.authorizedSignature)}
            description="‡∏£‡∏π‡∏õ‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏•‡∏á‡∏ô‡∏≤‡∏°"
          />
        </div>
      </Section>

      {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ */}
      <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-md">
        <p className="text-sm text-blue-800">
          <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong>{" "}
          ‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏∞‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏ó‡∏≤‡∏á‡∏™‡∏†‡∏≤‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢
          ‡πÅ‡∏•‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
        </p>
      </div>
    </div>
  );
}

SummarySection.propTypes = {
  formData: PropTypes.object.isRequired,
  industrialGroups: PropTypes.array,
  provincialChapters: PropTypes.array,
};
